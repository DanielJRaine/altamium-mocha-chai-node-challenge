{
  "reportTitle": "altamium-mocha-chai-node-challenge",
  "stats": {
    "suites": 10,
    "tests": 13,
    "passes": 12,
    "pending": 1,
    "failures": 0,
    "start": "2016-12-01T19:06:45.108Z",
    "end": "2016-12-01T19:06:45.612Z",
    "duration": 504,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 7.7,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Github Developer API",
        "suites": [
          {
            "title": "GET /users/:username/repos",
            "suites": [],
            "tests": [
              {
                "title": "Lists all public repositories for the specified user.",
                "fullTitle": "Github Developer API GET /users/:username/repos Lists all public repositories for the specified user.",
                "timedOut": false,
                "duration": 422,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">10000</span>);<br>chai.request(<span class=\"hljs-string\">'https://api.github.com'</span>)<br>        .get(<span class=\"hljs-string\">'/users/octocat/repos'</span>)<br>        .then((res) =&gt; {<br>            describe(<span class=\"hljs-string\">'Response'</span>, () =&gt; {<br>                it(<span class=\"hljs-string\">'returns status code 200'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>                    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>                });<br>                it(<span class=\"hljs-string\">'returns an array in response body'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>                    res.body.should.be.a(<span class=\"hljs-string\">'array'</span>);  <br>                });     <br>            });<br>            done();<br>        })<br>        .catch((err) =&gt; {<br>            <span class=\"hljs-keyword\">throw</span> err;<br>        })<br>        ;",
                "isRoot": false,
                "uuid": "bc39776c-08d4-40df-bb0c-18d56fe8f51a",
                "parentUUID": "fc3c68f8-a8be-452d-a16a-f42bf31db2af",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/octocat-profile-test.js",
            "uuid": "fc3c68f8-a8be-452d-a16a-f42bf31db2af",
            "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/octocat-profile-test.js",
            "passes": [
              {
                "title": "Lists all public repositories for the specified user.",
                "fullTitle": "Github Developer API GET /users/:username/repos Lists all public repositories for the specified user.",
                "timedOut": false,
                "duration": 422,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">10000</span>);<br>chai.request(<span class=\"hljs-string\">'https://api.github.com'</span>)<br>        .get(<span class=\"hljs-string\">'/users/octocat/repos'</span>)<br>        .then((res) =&gt; {<br>            describe(<span class=\"hljs-string\">'Response'</span>, () =&gt; {<br>                it(<span class=\"hljs-string\">'returns status code 200'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>                    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>                });<br>                it(<span class=\"hljs-string\">'returns an array in response body'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>                    res.body.should.be.a(<span class=\"hljs-string\">'array'</span>);  <br>                });     <br>            });<br>            done();<br>        })<br>        .catch((err) =&gt; {<br>            <span class=\"hljs-keyword\">throw</span> err;<br>        })<br>        ;",
                "isRoot": false,
                "uuid": "bc39776c-08d4-40df-bb0c-18d56fe8f51a",
                "parentUUID": "fc3c68f8-a8be-452d-a16a-f42bf31db2af",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 422
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 10000,
        "file": "/test/octocat-profile-test.js",
        "uuid": "875d63b2-eb98-4258-aa48-7514dc1a318c",
        "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/octocat-profile-test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "sinon tests",
        "suites": [
          {
            "title": "student.dropClass",
            "suites": [],
            "tests": [
              {
                "title": "should call the callback",
                "fullTitle": "sinon tests student.dropClass should call the callback",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> spy = sinon.spy();<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
                "isRoot": false,
                "uuid": "5dab42ed-29b7-4bc4-9989-e166696afddd",
                "parentUUID": "4df0594f-dc82-415b-8f6a-dbf6e5419b9a",
                "skipped": false
              },
              {
                "title": "should call the callback and log to the console",
                "fullTitle": "sinon tests student.dropClass should call the callback and log to the console",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">onClassDropped</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"onClassDropped was called\"</span>);<br>}<br><span class=\"hljs-keyword\">let</span> spy = sinon.spy(onClassDropped);<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
                "isRoot": false,
                "uuid": "273a10c3-1ca7-44cc-9abb-4c32afbc97b8",
                "parentUUID": "4df0594f-dc82-415b-8f6a-dbf6e5419b9a",
                "skipped": false
              },
              {
                "title": "should call the callback even if it is a method of an object",
                "fullTitle": "sinon tests student.dropClass should call the callback even if it is a method of an object",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sinon.spy(schedule, <span class=\"hljs-string\">'dropClass'</span>);<br>student.dropClass(<span class=\"hljs-number\">1</span>, schedule);<br>schedule.dropClass.called.should.be.true;",
                "isRoot": false,
                "uuid": "d91aeca2-1a30-4b53-9404-4c04a8643e80",
                "parentUUID": "4df0594f-dc82-415b-8f6a-dbf6e5419b9a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/sinon-test.js",
            "uuid": "4df0594f-dc82-415b-8f6a-dbf6e5419b9a",
            "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/sinon-test.js",
            "passes": [
              {
                "title": "should call the callback",
                "fullTitle": "sinon tests student.dropClass should call the callback",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> spy = sinon.spy();<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
                "isRoot": false,
                "uuid": "5dab42ed-29b7-4bc4-9989-e166696afddd",
                "parentUUID": "4df0594f-dc82-415b-8f6a-dbf6e5419b9a",
                "skipped": false
              },
              {
                "title": "should call the callback and log to the console",
                "fullTitle": "sinon tests student.dropClass should call the callback and log to the console",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">onClassDropped</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"onClassDropped was called\"</span>);<br>}<br><span class=\"hljs-keyword\">let</span> spy = sinon.spy(onClassDropped);<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
                "isRoot": false,
                "uuid": "273a10c3-1ca7-44cc-9abb-4c32afbc97b8",
                "parentUUID": "4df0594f-dc82-415b-8f6a-dbf6e5419b9a",
                "skipped": false
              },
              {
                "title": "should call the callback even if it is a method of an object",
                "fullTitle": "sinon tests student.dropClass should call the callback even if it is a method of an object",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sinon.spy(schedule, <span class=\"hljs-string\">'dropClass'</span>);<br>student.dropClass(<span class=\"hljs-number\">1</span>, schedule);<br>schedule.dropClass.called.should.be.true;",
                "isRoot": false,
                "uuid": "d91aeca2-1a30-4b53-9404-4c04a8643e80",
                "parentUUID": "4df0594f-dc82-415b-8f6a-dbf6e5419b9a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 12
          },
          {
            "title": "student with stubs",
            "suites": [],
            "tests": [
              {
                "title": "should call a stubbed method",
                "fullTitle": "sinon tests student with stubs should call a stubbed method",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule); <span class=\"hljs-comment\">// goes through every method on this object and replaces with a stub function</span><br>student.dropClass(<span class=\"hljs-number\">1</span>, stub.dropClass);<br>           <span class=\"hljs-comment\">// student.dropClass(1, stub); // since stub has all the methods, this is valid too.</span><br>stub.dropClass.called.should.be.true; <span class=\"hljs-comment\">// stubs don't call the inner implementation of the stubbed method'</span>",
                "isRoot": false,
                "uuid": "ded8c305-5305-4069-82ca-34bebe92893b",
                "parentUUID": "b278d9e8-05c0-4734-857d-c75105739624",
                "skipped": false
              },
              {
                "title": "should return true when the class is not full",
                "fullTitle": "sinon tests student with stubs should return true when the class is not full",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule);<br>stub.classIsFull.returns(<span class=\"hljs-literal\">false</span>);<br><span class=\"hljs-keyword\">let</span> returnVal = student.addClass(stub)<br>returnVal.should.be.true;",
                "isRoot": false,
                "uuid": "982d7144-9c8c-43c7-8b6e-a4f5dbeff1ab",
                "parentUUID": "b278d9e8-05c0-4734-857d-c75105739624",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/sinon-test.js",
            "uuid": "b278d9e8-05c0-4734-857d-c75105739624",
            "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/sinon-test.js",
            "passes": [
              {
                "title": "should call a stubbed method",
                "fullTitle": "sinon tests student with stubs should call a stubbed method",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule); <span class=\"hljs-comment\">// goes through every method on this object and replaces with a stub function</span><br>student.dropClass(<span class=\"hljs-number\">1</span>, stub.dropClass);<br>           <span class=\"hljs-comment\">// student.dropClass(1, stub); // since stub has all the methods, this is valid too.</span><br>stub.dropClass.called.should.be.true; <span class=\"hljs-comment\">// stubs don't call the inner implementation of the stubbed method'</span>",
                "isRoot": false,
                "uuid": "ded8c305-5305-4069-82ca-34bebe92893b",
                "parentUUID": "b278d9e8-05c0-4734-857d-c75105739624",
                "skipped": false
              },
              {
                "title": "should return true when the class is not full",
                "fullTitle": "sinon tests student with stubs should return true when the class is not full",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule);<br>stub.classIsFull.returns(<span class=\"hljs-literal\">false</span>);<br><span class=\"hljs-keyword\">let</span> returnVal = student.addClass(stub)<br>returnVal.should.be.true;",
                "isRoot": false,
                "uuid": "982d7144-9c8c-43c7-8b6e-a4f5dbeff1ab",
                "parentUUID": "b278d9e8-05c0-4734-857d-c75105739624",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 8
          },
          {
            "title": "student with mocks",
            "suites": [],
            "tests": [
              {
                "title": "mocks schedule",
                "fullTitle": "sinon tests student with mocks mocks schedule",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> mockObj = sinon.mock(schedule);<br>            <span class=\"hljs-comment\">//  let expectation = mockObj.expects('classIsFull').twice();</span><br><span class=\"hljs-keyword\">let</span> expectation = mockObj.expects(<span class=\"hljs-string\">'classIsFull'</span>).once();             <br>student.addClass(schedule);<br>expectation.verify();",
                "isRoot": false,
                "uuid": "abce2d94-0b08-427d-ab58-bf5b1c705189",
                "parentUUID": "e872788f-65d0-4997-8a1a-b56d6156d61f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/sinon-test.js",
            "uuid": "e872788f-65d0-4997-8a1a-b56d6156d61f",
            "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/sinon-test.js",
            "passes": [
              {
                "title": "mocks schedule",
                "fullTitle": "sinon tests student with mocks mocks schedule",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> mockObj = sinon.mock(schedule);<br>            <span class=\"hljs-comment\">//  let expectation = mockObj.expects('classIsFull').twice();</span><br><span class=\"hljs-keyword\">let</span> expectation = mockObj.expects(<span class=\"hljs-string\">'classIsFull'</span>).once();             <br>student.addClass(schedule);<br>expectation.verify();",
                "isRoot": false,
                "uuid": "abce2d94-0b08-427d-ab58-bf5b1c705189",
                "parentUUID": "e872788f-65d0-4997-8a1a-b56d6156d61f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/sinon-test.js",
        "uuid": "0d49a3ca-df97-4e52-8030-cae68c071165",
        "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/sinon-test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "number tests",
        "suites": [
          {
            "title": "isEven",
            "suites": [],
            "tests": [
              {
                "title": "should return true when number is even",
                "fullTitle": "number tests isEven should return true when number is even",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "isEven(4).should.be.true;",
                "isRoot": false,
                "uuid": "85c9cf9a-31f1-4c6e-8557-3166d5abb6dd",
                "parentUUID": "79a41ad5-2e42-4ae7-a84f-04bcd33dc501",
                "skipped": false
              },
              {
                "title": "should return false when number is odd",
                "fullTitle": "number tests isEven should return false when number is odd",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(isEven(5)).to.be.false;",
                "isRoot": false,
                "uuid": "e24cd25f-008c-4167-844e-e758d0059a89",
                "parentUUID": "79a41ad5-2e42-4ae7-a84f-04bcd33dc501",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/test.js",
            "uuid": "79a41ad5-2e42-4ae7-a84f-04bcd33dc501",
            "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/test.js",
            "passes": [
              {
                "title": "should return true when number is even",
                "fullTitle": "number tests isEven should return true when number is even",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "isEven(4).should.be.true;",
                "isRoot": false,
                "uuid": "85c9cf9a-31f1-4c6e-8557-3166d5abb6dd",
                "parentUUID": "79a41ad5-2e42-4ae7-a84f-04bcd33dc501",
                "skipped": false
              },
              {
                "title": "should return false when number is odd",
                "fullTitle": "number tests isEven should return false when number is odd",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(isEven(5)).to.be.false;",
                "isRoot": false,
                "uuid": "e24cd25f-008c-4167-844e-e758d0059a89",
                "parentUUID": "79a41ad5-2e42-4ae7-a84f-04bcd33dc501",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "add with setup/teardown",
            "suites": [],
            "tests": [
              {
                "title": "should be 12 when adding 7 to 5",
                "fullTitle": "number tests add with setup/teardown should be 12 when adding 7 to 5",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "add(num, 7).should.equal(12);",
                "isRoot": false,
                "uuid": "12e8e5d3-68c3-4982-b468-0d75fa9a5dd8",
                "parentUUID": "e38d2625-73c0-4ea9-b16d-f7907cb8d652",
                "skipped": false
              },
              {
                "title": "should be 12 when adding 7 to 5",
                "fullTitle": "number tests add with setup/teardown should be 12 when adding 7 to 5",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "3cc5cbec-6d20-4b3d-bde9-81e9054f9fc7",
                "parentUUID": "e38d2625-73c0-4ea9-b16d-f7907cb8d652",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "should be 12 when adding 7 to 5",
                "fullTitle": "number tests add with setup/teardown should be 12 when adding 7 to 5",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "3cc5cbec-6d20-4b3d-bde9-81e9054f9fc7",
                "parentUUID": "e38d2625-73c0-4ea9-b16d-f7907cb8d652",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 2000,
            "file": "/test/test.js",
            "uuid": "e38d2625-73c0-4ea9-b16d-f7907cb8d652",
            "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/test.js",
            "passes": [
              {
                "title": "should be 12 when adding 7 to 5",
                "fullTitle": "number tests add with setup/teardown should be 12 when adding 7 to 5",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "add(num, 7).should.equal(12);",
                "isRoot": false,
                "uuid": "12e8e5d3-68c3-4982-b468-0d75fa9a5dd8",
                "parentUUID": "e38d2625-73c0-4ea9-b16d-f7907cb8d652",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/test.js",
        "uuid": "4e315efa-7dd3-4fbf-a164-3460d5faae49",
        "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Response",
        "suites": [],
        "tests": [
          {
            "title": "returns status code 200",
            "fullTitle": "Response returns status code 200",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "res.should.have.status(200);",
            "isRoot": false,
            "uuid": "b6e016b4-7949-4a82-b015-000e447023c2",
            "parentUUID": "f3f66b26-cf06-455a-8351-df5ab79c8053",
            "skipped": false
          },
          {
            "title": "returns an array in response body",
            "fullTitle": "Response returns an array in response body",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "res.body.should.be.a(<span class=\"hljs-string\">'array'</span>);",
            "isRoot": false,
            "uuid": "5855d0a8-d81c-4a60-8e3e-4eb275399225",
            "parentUUID": "f3f66b26-cf06-455a-8351-df5ab79c8053",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/test.js",
        "uuid": "f3f66b26-cf06-455a-8351-df5ab79c8053",
        "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/test.js",
        "passes": [
          {
            "title": "returns status code 200",
            "fullTitle": "Response returns status code 200",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "res.should.have.status(200);",
            "isRoot": false,
            "uuid": "b6e016b4-7949-4a82-b015-000e447023c2",
            "parentUUID": "f3f66b26-cf06-455a-8351-df5ab79c8053",
            "skipped": false
          },
          {
            "title": "returns an array in response body",
            "fullTitle": "Response returns an array in response body",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "res.body.should.be.a(<span class=\"hljs-string\">'array'</span>);",
            "isRoot": false,
            "uuid": "5855d0a8-d81c-4a60-8e3e-4eb275399225",
            "parentUUID": "f3f66b26-cf06-455a-8351-df5ab79c8053",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 3
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "39354987-0993-467a-b2dd-a78ce19b2cc3",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "Lists all public repositories for the specified user.",
      "fullTitle": "GET /users/:username/repos Lists all public repositories for the specified user.",
      "timedOut": false,
      "duration": 422,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">10000</span>);<br>chai.request(<span class=\"hljs-string\">'https://api.github.com'</span>)<br>        .get(<span class=\"hljs-string\">'/users/octocat/repos'</span>)<br>        .then((res) =&gt; {<br>            describe(<span class=\"hljs-string\">'Response'</span>, () =&gt; {<br>                it(<span class=\"hljs-string\">'returns status code 200'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>                    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>                });<br>                it(<span class=\"hljs-string\">'returns an array in response body'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>                    res.body.should.be.a(<span class=\"hljs-string\">'array'</span>);  <br>                });     <br>            });<br>            done();<br>        })<br>        .catch((err) =&gt; {<br>            <span class=\"hljs-keyword\">throw</span> err;<br>        })<br>        ;",
      "isRoot": false,
      "uuid": "14bc1357-ff8e-45b6-9e9b-c5c6f1ec8ba7",
      "parentUUID": "fc3c68f8-a8be-452d-a16a-f42bf31db2af",
      "skipped": false
    },
    {
      "title": "should call the callback",
      "fullTitle": "student.dropClass should call the callback",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> spy = sinon.spy();<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
      "isRoot": false,
      "uuid": "b40b9d33-1500-407d-8930-2a82e65c2a84",
      "parentUUID": "4df0594f-dc82-415b-8f6a-dbf6e5419b9a",
      "skipped": false
    },
    {
      "title": "should call the callback and log to the console",
      "fullTitle": "student.dropClass should call the callback and log to the console",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">onClassDropped</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"onClassDropped was called\"</span>);<br>}<br><span class=\"hljs-keyword\">let</span> spy = sinon.spy(onClassDropped);<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
      "isRoot": false,
      "uuid": "196841f5-727e-4510-b951-fad3143f6478",
      "parentUUID": "4df0594f-dc82-415b-8f6a-dbf6e5419b9a",
      "skipped": false
    },
    {
      "title": "should call the callback even if it is a method of an object",
      "fullTitle": "student.dropClass should call the callback even if it is a method of an object",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "sinon.spy(schedule, <span class=\"hljs-string\">'dropClass'</span>);<br>student.dropClass(<span class=\"hljs-number\">1</span>, schedule);<br>schedule.dropClass.called.should.be.true;",
      "isRoot": false,
      "uuid": "c756c946-06c4-4eeb-a97e-d0cb409b3403",
      "parentUUID": "4df0594f-dc82-415b-8f6a-dbf6e5419b9a",
      "skipped": false
    },
    {
      "title": "should call a stubbed method",
      "fullTitle": "student with stubs should call a stubbed method",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule); <span class=\"hljs-comment\">// goes through every method on this object and replaces with a stub function</span><br>student.dropClass(<span class=\"hljs-number\">1</span>, stub.dropClass);<br>           <span class=\"hljs-comment\">// student.dropClass(1, stub); // since stub has all the methods, this is valid too.</span><br>stub.dropClass.called.should.be.true; <span class=\"hljs-comment\">// stubs don't call the inner implementation of the stubbed method'</span>",
      "isRoot": false,
      "uuid": "3814fe04-d76e-4436-8ce5-b5e2e02fa4a2",
      "parentUUID": "b278d9e8-05c0-4734-857d-c75105739624",
      "skipped": false
    },
    {
      "title": "should return true when the class is not full",
      "fullTitle": "student with stubs should return true when the class is not full",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule);<br>stub.classIsFull.returns(<span class=\"hljs-literal\">false</span>);<br><span class=\"hljs-keyword\">let</span> returnVal = student.addClass(stub)<br>returnVal.should.be.true;",
      "isRoot": false,
      "uuid": "245e89cd-79b3-4152-883c-50e9c53f622a",
      "parentUUID": "b278d9e8-05c0-4734-857d-c75105739624",
      "skipped": false
    },
    {
      "title": "mocks schedule",
      "fullTitle": "student with mocks mocks schedule",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> mockObj = sinon.mock(schedule);<br>            <span class=\"hljs-comment\">//  let expectation = mockObj.expects('classIsFull').twice();</span><br><span class=\"hljs-keyword\">let</span> expectation = mockObj.expects(<span class=\"hljs-string\">'classIsFull'</span>).once();             <br>student.addClass(schedule);<br>expectation.verify();",
      "isRoot": false,
      "uuid": "33117263-ef98-4484-b116-72d9c032098b",
      "parentUUID": "e872788f-65d0-4997-8a1a-b56d6156d61f",
      "skipped": false
    },
    {
      "title": "should return true when number is even",
      "fullTitle": "isEven should return true when number is even",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "isEven(4).should.be.true;",
      "isRoot": false,
      "uuid": "6dfaaa30-2ad8-4046-b2a2-570551314e1e",
      "parentUUID": "79a41ad5-2e42-4ae7-a84f-04bcd33dc501",
      "skipped": false
    },
    {
      "title": "should return false when number is odd",
      "fullTitle": "isEven should return false when number is odd",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(isEven(5)).to.be.false;",
      "isRoot": false,
      "uuid": "c69e85d2-909b-43c7-90af-29c155836e3c",
      "parentUUID": "79a41ad5-2e42-4ae7-a84f-04bcd33dc501",
      "skipped": false
    },
    {
      "title": "should be 12 when adding 7 to 5",
      "fullTitle": "add with setup/teardown should be 12 when adding 7 to 5",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "add(num, 7).should.equal(12);",
      "isRoot": false,
      "uuid": "b443c299-91cd-4615-aa03-d784aa7522e0",
      "parentUUID": "e38d2625-73c0-4ea9-b16d-f7907cb8d652",
      "skipped": false
    },
    {
      "title": "should be 12 when adding 7 to 5",
      "fullTitle": "add with setup/teardown should be 12 when adding 7 to 5",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "b7528b5a-2971-4ece-8a46-eaa15250f8fe",
      "parentUUID": "e38d2625-73c0-4ea9-b16d-f7907cb8d652",
      "skipped": false
    },
    {
      "title": "returns status code 200",
      "fullTitle": "Response returns status code 200",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "res.should.have.status(200);",
      "isRoot": false,
      "uuid": "febe2dc7-cf61-4113-9f36-b07760108475",
      "parentUUID": "f3f66b26-cf06-455a-8351-df5ab79c8053",
      "skipped": false
    },
    {
      "title": "returns an array in response body",
      "fullTitle": "Response returns an array in response body",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "res.body.should.be.a(<span class=\"hljs-string\">'array'</span>);",
      "isRoot": false,
      "uuid": "a6edee9a-3387-40d2-9cfb-008c3ecd2864",
      "parentUUID": "f3f66b26-cf06-455a-8351-df5ab79c8053",
      "skipped": false
    }
  ],
  "allPending": [
    {
      "title": "should be 12 when adding 7 to 5",
      "fullTitle": "add with setup/teardown should be 12 when adding 7 to 5",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "cdea4ff9-59ce-407e-bb4a-44e9fda9acbb",
      "parentUUID": "e38d2625-73c0-4ea9-b16d-f7907cb8d652",
      "skipped": false
    }
  ],
  "allPasses": [
    {
      "title": "Lists all public repositories for the specified user.",
      "fullTitle": "GET /users/:username/repos Lists all public repositories for the specified user.",
      "timedOut": false,
      "duration": 422,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">10000</span>);<br>chai.request(<span class=\"hljs-string\">'https://api.github.com'</span>)<br>        .get(<span class=\"hljs-string\">'/users/octocat/repos'</span>)<br>        .then((res) =&gt; {<br>            describe(<span class=\"hljs-string\">'Response'</span>, () =&gt; {<br>                it(<span class=\"hljs-string\">'returns status code 200'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>                    res.should.have.status(<span class=\"hljs-number\">200</span>);<br>                });<br>                it(<span class=\"hljs-string\">'returns an array in response body'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{<br>                    res.body.should.be.a(<span class=\"hljs-string\">'array'</span>);  <br>                });     <br>            });<br>            done();<br>        })<br>        .catch((err) =&gt; {<br>            <span class=\"hljs-keyword\">throw</span> err;<br>        })<br>        ;",
      "isRoot": false,
      "uuid": "38fa7866-d0ce-4116-8eb2-ab4abe126411",
      "parentUUID": "fc3c68f8-a8be-452d-a16a-f42bf31db2af",
      "skipped": false
    },
    {
      "title": "should call the callback",
      "fullTitle": "student.dropClass should call the callback",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> spy = sinon.spy();<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
      "isRoot": false,
      "uuid": "dbcf46ca-327b-45a4-87d1-ed00699f5629",
      "parentUUID": "4df0594f-dc82-415b-8f6a-dbf6e5419b9a",
      "skipped": false
    },
    {
      "title": "should call the callback and log to the console",
      "fullTitle": "student.dropClass should call the callback and log to the console",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">onClassDropped</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"onClassDropped was called\"</span>);<br>}<br><span class=\"hljs-keyword\">let</span> spy = sinon.spy(onClassDropped);<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
      "isRoot": false,
      "uuid": "4e2be05d-291a-439a-9b00-60b2e20ac69f",
      "parentUUID": "4df0594f-dc82-415b-8f6a-dbf6e5419b9a",
      "skipped": false
    },
    {
      "title": "should call the callback even if it is a method of an object",
      "fullTitle": "student.dropClass should call the callback even if it is a method of an object",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "sinon.spy(schedule, <span class=\"hljs-string\">'dropClass'</span>);<br>student.dropClass(<span class=\"hljs-number\">1</span>, schedule);<br>schedule.dropClass.called.should.be.true;",
      "isRoot": false,
      "uuid": "6d55209c-1c23-465d-b009-0c2d45e2214e",
      "parentUUID": "4df0594f-dc82-415b-8f6a-dbf6e5419b9a",
      "skipped": false
    },
    {
      "title": "should call a stubbed method",
      "fullTitle": "student with stubs should call a stubbed method",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule); <span class=\"hljs-comment\">// goes through every method on this object and replaces with a stub function</span><br>student.dropClass(<span class=\"hljs-number\">1</span>, stub.dropClass);<br>           <span class=\"hljs-comment\">// student.dropClass(1, stub); // since stub has all the methods, this is valid too.</span><br>stub.dropClass.called.should.be.true; <span class=\"hljs-comment\">// stubs don't call the inner implementation of the stubbed method'</span>",
      "isRoot": false,
      "uuid": "61c67bf3-8db4-4882-ba3a-7e66fc51fb5c",
      "parentUUID": "b278d9e8-05c0-4734-857d-c75105739624",
      "skipped": false
    },
    {
      "title": "should return true when the class is not full",
      "fullTitle": "student with stubs should return true when the class is not full",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule);<br>stub.classIsFull.returns(<span class=\"hljs-literal\">false</span>);<br><span class=\"hljs-keyword\">let</span> returnVal = student.addClass(stub)<br>returnVal.should.be.true;",
      "isRoot": false,
      "uuid": "14a11916-a694-47cc-b0ae-bc188c915bcc",
      "parentUUID": "b278d9e8-05c0-4734-857d-c75105739624",
      "skipped": false
    },
    {
      "title": "mocks schedule",
      "fullTitle": "student with mocks mocks schedule",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> mockObj = sinon.mock(schedule);<br>            <span class=\"hljs-comment\">//  let expectation = mockObj.expects('classIsFull').twice();</span><br><span class=\"hljs-keyword\">let</span> expectation = mockObj.expects(<span class=\"hljs-string\">'classIsFull'</span>).once();             <br>student.addClass(schedule);<br>expectation.verify();",
      "isRoot": false,
      "uuid": "8eedfdb7-9ed7-4fca-9c81-6b3464b2df03",
      "parentUUID": "e872788f-65d0-4997-8a1a-b56d6156d61f",
      "skipped": false
    },
    {
      "title": "should return true when number is even",
      "fullTitle": "isEven should return true when number is even",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "isEven(4).should.be.true;",
      "isRoot": false,
      "uuid": "55fe9bfe-672f-492a-b1d9-73845c8db8f3",
      "parentUUID": "79a41ad5-2e42-4ae7-a84f-04bcd33dc501",
      "skipped": false
    },
    {
      "title": "should return false when number is odd",
      "fullTitle": "isEven should return false when number is odd",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(isEven(5)).to.be.false;",
      "isRoot": false,
      "uuid": "937a5b10-a8b5-491d-9a87-454b276b591a",
      "parentUUID": "79a41ad5-2e42-4ae7-a84f-04bcd33dc501",
      "skipped": false
    },
    {
      "title": "should be 12 when adding 7 to 5",
      "fullTitle": "add with setup/teardown should be 12 when adding 7 to 5",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "add(num, 7).should.equal(12);",
      "isRoot": false,
      "uuid": "6f98e6d0-0a39-4d05-a574-6572c6482707",
      "parentUUID": "e38d2625-73c0-4ea9-b16d-f7907cb8d652",
      "skipped": false
    },
    {
      "title": "returns status code 200",
      "fullTitle": "Response returns status code 200",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "res.should.have.status(200);",
      "isRoot": false,
      "uuid": "dc020e52-5508-4f90-b59b-eae75bece949",
      "parentUUID": "f3f66b26-cf06-455a-8351-df5ab79c8053",
      "skipped": false
    },
    {
      "title": "returns an array in response body",
      "fullTitle": "Response returns an array in response body",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "res.body.should.be.a(<span class=\"hljs-string\">'array'</span>);",
      "isRoot": false,
      "uuid": "e7c2e8e6-9025-4652-9575-3e0a651c257c",
      "parentUUID": "f3f66b26-cf06-455a-8351-df5ab79c8053",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}
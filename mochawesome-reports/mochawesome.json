{
  "reportTitle": "altamium-mocha-chai-node-challenge",
  "stats": {
    "suites": 7,
    "tests": 10,
    "passes": 9,
    "pending": 1,
    "failures": 0,
    "start": "2016-11-30T23:24:05.949Z",
    "end": "2016-11-30T23:24:06.928Z",
    "duration": 979,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 10,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "sinon tests",
        "suites": [
          {
            "title": "student.dropClass",
            "suites": [],
            "tests": [
              {
                "title": "should call the callback",
                "fullTitle": "sinon tests student.dropClass should call the callback",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> spy = sinon.spy();<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
                "isRoot": false,
                "uuid": "776901a3-2dfd-4c4f-a104-c4d3921f8d22",
                "parentUUID": "f9ca8bcf-ed87-4f72-881b-d55f368e70bd",
                "skipped": false
              },
              {
                "title": "should call the callback and log to the console",
                "fullTitle": "sinon tests student.dropClass should call the callback and log to the console",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">onClassDropped</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"onClassDropped was called\"</span>);<br>}<br><span class=\"hljs-keyword\">let</span> spy = sinon.spy(onClassDropped);<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
                "isRoot": false,
                "uuid": "11b4442b-9521-4024-8160-319dc91d442f",
                "parentUUID": "f9ca8bcf-ed87-4f72-881b-d55f368e70bd",
                "skipped": false
              },
              {
                "title": "should call the callback even if it is a method of an object",
                "fullTitle": "sinon tests student.dropClass should call the callback even if it is a method of an object",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sinon.spy(schedule, <span class=\"hljs-string\">'dropClass'</span>);<br>student.dropClass(<span class=\"hljs-number\">1</span>, schedule);<br>schedule.dropClass.called.should.be.true;",
                "isRoot": false,
                "uuid": "6d01f8e1-1866-464d-8c9d-3bebcb99aa7b",
                "parentUUID": "f9ca8bcf-ed87-4f72-881b-d55f368e70bd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/sinon-test.js",
            "uuid": "f9ca8bcf-ed87-4f72-881b-d55f368e70bd",
            "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/sinon-test.js",
            "passes": [
              {
                "title": "should call the callback",
                "fullTitle": "sinon tests student.dropClass should call the callback",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> spy = sinon.spy();<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
                "isRoot": false,
                "uuid": "776901a3-2dfd-4c4f-a104-c4d3921f8d22",
                "parentUUID": "f9ca8bcf-ed87-4f72-881b-d55f368e70bd",
                "skipped": false
              },
              {
                "title": "should call the callback and log to the console",
                "fullTitle": "sinon tests student.dropClass should call the callback and log to the console",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">onClassDropped</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"onClassDropped was called\"</span>);<br>}<br><span class=\"hljs-keyword\">let</span> spy = sinon.spy(onClassDropped);<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
                "isRoot": false,
                "uuid": "11b4442b-9521-4024-8160-319dc91d442f",
                "parentUUID": "f9ca8bcf-ed87-4f72-881b-d55f368e70bd",
                "skipped": false
              },
              {
                "title": "should call the callback even if it is a method of an object",
                "fullTitle": "sinon tests student.dropClass should call the callback even if it is a method of an object",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sinon.spy(schedule, <span class=\"hljs-string\">'dropClass'</span>);<br>student.dropClass(<span class=\"hljs-number\">1</span>, schedule);<br>schedule.dropClass.called.should.be.true;",
                "isRoot": false,
                "uuid": "6d01f8e1-1866-464d-8c9d-3bebcb99aa7b",
                "parentUUID": "f9ca8bcf-ed87-4f72-881b-d55f368e70bd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 13
          },
          {
            "title": "student with stubs",
            "suites": [],
            "tests": [
              {
                "title": "should call a stubbed method",
                "fullTitle": "sinon tests student with stubs should call a stubbed method",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule); <span class=\"hljs-comment\">// goes through every method on this object and replaces with a stub function</span><br>student.dropClass(<span class=\"hljs-number\">1</span>, stub.dropClass);<br>           <span class=\"hljs-comment\">// student.dropClass(1, stub); // since stub has all the methods, this is valid too.</span><br>stub.dropClass.called.should.be.true; <span class=\"hljs-comment\">// stubs don't call the inner implementation of the stubbed method'</span>",
                "isRoot": false,
                "uuid": "1ac133b1-2739-4983-a0bb-58e55c6e2479",
                "parentUUID": "9ab5a7bb-5718-4b65-80e8-a5c4f9b69443",
                "skipped": false
              },
              {
                "title": "should return true when the class is not full",
                "fullTitle": "sinon tests student with stubs should return true when the class is not full",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule);<br>stub.classIsFull.returns(<span class=\"hljs-literal\">false</span>);<br><span class=\"hljs-keyword\">let</span> returnVal = student.addClass(stub)<br>returnVal.should.be.true;",
                "isRoot": false,
                "uuid": "830c1ba3-7615-4c8f-b0e6-173bd44cba31",
                "parentUUID": "9ab5a7bb-5718-4b65-80e8-a5c4f9b69443",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/sinon-test.js",
            "uuid": "9ab5a7bb-5718-4b65-80e8-a5c4f9b69443",
            "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/sinon-test.js",
            "passes": [
              {
                "title": "should call a stubbed method",
                "fullTitle": "sinon tests student with stubs should call a stubbed method",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule); <span class=\"hljs-comment\">// goes through every method on this object and replaces with a stub function</span><br>student.dropClass(<span class=\"hljs-number\">1</span>, stub.dropClass);<br>           <span class=\"hljs-comment\">// student.dropClass(1, stub); // since stub has all the methods, this is valid too.</span><br>stub.dropClass.called.should.be.true; <span class=\"hljs-comment\">// stubs don't call the inner implementation of the stubbed method'</span>",
                "isRoot": false,
                "uuid": "1ac133b1-2739-4983-a0bb-58e55c6e2479",
                "parentUUID": "9ab5a7bb-5718-4b65-80e8-a5c4f9b69443",
                "skipped": false
              },
              {
                "title": "should return true when the class is not full",
                "fullTitle": "sinon tests student with stubs should return true when the class is not full",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule);<br>stub.classIsFull.returns(<span class=\"hljs-literal\">false</span>);<br><span class=\"hljs-keyword\">let</span> returnVal = student.addClass(stub)<br>returnVal.should.be.true;",
                "isRoot": false,
                "uuid": "830c1ba3-7615-4c8f-b0e6-173bd44cba31",
                "parentUUID": "9ab5a7bb-5718-4b65-80e8-a5c4f9b69443",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 7
          },
          {
            "title": "student with mocks",
            "suites": [],
            "tests": [
              {
                "title": "mocks schedule",
                "fullTitle": "sinon tests student with mocks mocks schedule",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> mockObj = sinon.mock(schedule);<br>            <span class=\"hljs-comment\">//  let expectation = mockObj.expects('classIsFull').twice();</span><br><span class=\"hljs-keyword\">let</span> expectation = mockObj.expects(<span class=\"hljs-string\">'classIsFull'</span>).once();             <br>student.addClass(schedule);<br>expectation.verify();",
                "isRoot": false,
                "uuid": "568c0f9b-ca09-4b53-978d-b1aa3511aabd",
                "parentUUID": "f9953de8-813b-4682-a0e0-67c5d2358039",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/sinon-test.js",
            "uuid": "f9953de8-813b-4682-a0e0-67c5d2358039",
            "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/sinon-test.js",
            "passes": [
              {
                "title": "mocks schedule",
                "fullTitle": "sinon tests student with mocks mocks schedule",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> mockObj = sinon.mock(schedule);<br>            <span class=\"hljs-comment\">//  let expectation = mockObj.expects('classIsFull').twice();</span><br><span class=\"hljs-keyword\">let</span> expectation = mockObj.expects(<span class=\"hljs-string\">'classIsFull'</span>).once();             <br>student.addClass(schedule);<br>expectation.verify();",
                "isRoot": false,
                "uuid": "568c0f9b-ca09-4b53-978d-b1aa3511aabd",
                "parentUUID": "f9953de8-813b-4682-a0e0-67c5d2358039",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/sinon-test.js",
        "uuid": "a3bec144-4d9b-459f-a8c7-571040229ae3",
        "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/sinon-test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "number tests",
        "suites": [
          {
            "title": "isEven",
            "suites": [],
            "tests": [
              {
                "title": "should return true when number is even",
                "fullTitle": "number tests isEven should return true when number is even",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "isEven(4).should.be.true;",
                "isRoot": false,
                "uuid": "4e35152c-83ce-4446-8ea6-39a9e7c2eee9",
                "parentUUID": "f85bb41b-198a-48f4-a120-7f1e5c750c71",
                "skipped": false
              },
              {
                "title": "should return false when number is odd",
                "fullTitle": "number tests isEven should return false when number is odd",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(isEven(5)).to.be.false;",
                "isRoot": false,
                "uuid": "8600e647-b4ee-49af-8f47-a8998c2e4055",
                "parentUUID": "f85bb41b-198a-48f4-a120-7f1e5c750c71",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/test.js",
            "uuid": "f85bb41b-198a-48f4-a120-7f1e5c750c71",
            "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/test.js",
            "passes": [
              {
                "title": "should return true when number is even",
                "fullTitle": "number tests isEven should return true when number is even",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "isEven(4).should.be.true;",
                "isRoot": false,
                "uuid": "4e35152c-83ce-4446-8ea6-39a9e7c2eee9",
                "parentUUID": "f85bb41b-198a-48f4-a120-7f1e5c750c71",
                "skipped": false
              },
              {
                "title": "should return false when number is odd",
                "fullTitle": "number tests isEven should return false when number is odd",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(isEven(5)).to.be.false;",
                "isRoot": false,
                "uuid": "8600e647-b4ee-49af-8f47-a8998c2e4055",
                "parentUUID": "f85bb41b-198a-48f4-a120-7f1e5c750c71",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "add with setup/teardown",
            "suites": [],
            "tests": [
              {
                "title": "should be 12 when adding 7 to 5",
                "fullTitle": "number tests add with setup/teardown should be 12 when adding 7 to 5",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "add(num, 7).should.equal(12);",
                "isRoot": false,
                "uuid": "d568e7e7-0dd5-4ae9-a831-dbbd3152b74f",
                "parentUUID": "a9a2a469-aefd-41d6-8188-865495f909b1",
                "skipped": false
              },
              {
                "title": "should be 12 when adding 7 to 5",
                "fullTitle": "number tests add with setup/teardown should be 12 when adding 7 to 5",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "ec53c018-4c14-4c3c-bed2-db8da9805eda",
                "parentUUID": "a9a2a469-aefd-41d6-8188-865495f909b1",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "should be 12 when adding 7 to 5",
                "fullTitle": "number tests add with setup/teardown should be 12 when adding 7 to 5",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "ec53c018-4c14-4c3c-bed2-db8da9805eda",
                "parentUUID": "a9a2a469-aefd-41d6-8188-865495f909b1",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 2000,
            "file": "/test/test.js",
            "uuid": "a9a2a469-aefd-41d6-8188-865495f909b1",
            "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/test.js",
            "passes": [
              {
                "title": "should be 12 when adding 7 to 5",
                "fullTitle": "number tests add with setup/teardown should be 12 when adding 7 to 5",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "add(num, 7).should.equal(12);",
                "isRoot": false,
                "uuid": "d568e7e7-0dd5-4ae9-a831-dbbd3152b74f",
                "parentUUID": "a9a2a469-aefd-41d6-8188-865495f909b1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/test.js",
        "uuid": "f38d061a-2b3f-4a01-af5d-b6d09d24e3ed",
        "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "47f4382d-5892-4d61-a39d-c50dfb170c4b",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should call the callback",
      "fullTitle": "student.dropClass should call the callback",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> spy = sinon.spy();<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
      "isRoot": false,
      "uuid": "7714cdfd-4b57-4887-a161-f3e9d2806071",
      "parentUUID": "f9ca8bcf-ed87-4f72-881b-d55f368e70bd",
      "skipped": false
    },
    {
      "title": "should call the callback and log to the console",
      "fullTitle": "student.dropClass should call the callback and log to the console",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">onClassDropped</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"onClassDropped was called\"</span>);<br>}<br><span class=\"hljs-keyword\">let</span> spy = sinon.spy(onClassDropped);<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
      "isRoot": false,
      "uuid": "e0ef4b42-ad0f-427c-bcc0-d99fc1fab0ae",
      "parentUUID": "f9ca8bcf-ed87-4f72-881b-d55f368e70bd",
      "skipped": false
    },
    {
      "title": "should call the callback even if it is a method of an object",
      "fullTitle": "student.dropClass should call the callback even if it is a method of an object",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "sinon.spy(schedule, <span class=\"hljs-string\">'dropClass'</span>);<br>student.dropClass(<span class=\"hljs-number\">1</span>, schedule);<br>schedule.dropClass.called.should.be.true;",
      "isRoot": false,
      "uuid": "df5d7c5b-3b03-4fd7-9bb9-4740b4509a2a",
      "parentUUID": "f9ca8bcf-ed87-4f72-881b-d55f368e70bd",
      "skipped": false
    },
    {
      "title": "should call a stubbed method",
      "fullTitle": "student with stubs should call a stubbed method",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule); <span class=\"hljs-comment\">// goes through every method on this object and replaces with a stub function</span><br>student.dropClass(<span class=\"hljs-number\">1</span>, stub.dropClass);<br>           <span class=\"hljs-comment\">// student.dropClass(1, stub); // since stub has all the methods, this is valid too.</span><br>stub.dropClass.called.should.be.true; <span class=\"hljs-comment\">// stubs don't call the inner implementation of the stubbed method'</span>",
      "isRoot": false,
      "uuid": "288b0471-7455-4065-984e-4e0a950d6da3",
      "parentUUID": "9ab5a7bb-5718-4b65-80e8-a5c4f9b69443",
      "skipped": false
    },
    {
      "title": "should return true when the class is not full",
      "fullTitle": "student with stubs should return true when the class is not full",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule);<br>stub.classIsFull.returns(<span class=\"hljs-literal\">false</span>);<br><span class=\"hljs-keyword\">let</span> returnVal = student.addClass(stub)<br>returnVal.should.be.true;",
      "isRoot": false,
      "uuid": "9be5c5b5-99d8-4924-996b-35c75c238a06",
      "parentUUID": "9ab5a7bb-5718-4b65-80e8-a5c4f9b69443",
      "skipped": false
    },
    {
      "title": "mocks schedule",
      "fullTitle": "student with mocks mocks schedule",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> mockObj = sinon.mock(schedule);<br>            <span class=\"hljs-comment\">//  let expectation = mockObj.expects('classIsFull').twice();</span><br><span class=\"hljs-keyword\">let</span> expectation = mockObj.expects(<span class=\"hljs-string\">'classIsFull'</span>).once();             <br>student.addClass(schedule);<br>expectation.verify();",
      "isRoot": false,
      "uuid": "678b8a7d-2816-4ed6-9b9e-b52b09478693",
      "parentUUID": "f9953de8-813b-4682-a0e0-67c5d2358039",
      "skipped": false
    },
    {
      "title": "should return true when number is even",
      "fullTitle": "isEven should return true when number is even",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "isEven(4).should.be.true;",
      "isRoot": false,
      "uuid": "b92a857a-c289-4c75-b110-c1c60da91949",
      "parentUUID": "f85bb41b-198a-48f4-a120-7f1e5c750c71",
      "skipped": false
    },
    {
      "title": "should return false when number is odd",
      "fullTitle": "isEven should return false when number is odd",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(isEven(5)).to.be.false;",
      "isRoot": false,
      "uuid": "2435a06a-9cdf-4143-ac06-046d7e1db569",
      "parentUUID": "f85bb41b-198a-48f4-a120-7f1e5c750c71",
      "skipped": false
    },
    {
      "title": "should be 12 when adding 7 to 5",
      "fullTitle": "add with setup/teardown should be 12 when adding 7 to 5",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "add(num, 7).should.equal(12);",
      "isRoot": false,
      "uuid": "a44e3909-8a8e-4efa-bb51-756bf8cbd673",
      "parentUUID": "a9a2a469-aefd-41d6-8188-865495f909b1",
      "skipped": false
    },
    {
      "title": "should be 12 when adding 7 to 5",
      "fullTitle": "add with setup/teardown should be 12 when adding 7 to 5",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "6d3eb10d-3041-4821-acd9-eeb9df721d5d",
      "parentUUID": "a9a2a469-aefd-41d6-8188-865495f909b1",
      "skipped": false
    }
  ],
  "allPending": [
    {
      "title": "should be 12 when adding 7 to 5",
      "fullTitle": "add with setup/teardown should be 12 when adding 7 to 5",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "e4f09e3a-2060-4715-a8fb-bfb734a4437a",
      "parentUUID": "a9a2a469-aefd-41d6-8188-865495f909b1",
      "skipped": false
    }
  ],
  "allPasses": [
    {
      "title": "should call the callback",
      "fullTitle": "student.dropClass should call the callback",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> spy = sinon.spy();<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
      "isRoot": false,
      "uuid": "445fab26-724a-4b76-92fa-ed0200b03858",
      "parentUUID": "f9ca8bcf-ed87-4f72-881b-d55f368e70bd",
      "skipped": false
    },
    {
      "title": "should call the callback and log to the console",
      "fullTitle": "student.dropClass should call the callback and log to the console",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">onClassDropped</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"onClassDropped was called\"</span>);<br>}<br><span class=\"hljs-keyword\">let</span> spy = sinon.spy(onClassDropped);<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
      "isRoot": false,
      "uuid": "812c7b29-0a85-4b12-99bd-bf2cc542b191",
      "parentUUID": "f9ca8bcf-ed87-4f72-881b-d55f368e70bd",
      "skipped": false
    },
    {
      "title": "should call the callback even if it is a method of an object",
      "fullTitle": "student.dropClass should call the callback even if it is a method of an object",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "sinon.spy(schedule, <span class=\"hljs-string\">'dropClass'</span>);<br>student.dropClass(<span class=\"hljs-number\">1</span>, schedule);<br>schedule.dropClass.called.should.be.true;",
      "isRoot": false,
      "uuid": "a5bdd70b-8c75-4737-89c2-d7d7869f5770",
      "parentUUID": "f9ca8bcf-ed87-4f72-881b-d55f368e70bd",
      "skipped": false
    },
    {
      "title": "should call a stubbed method",
      "fullTitle": "student with stubs should call a stubbed method",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule); <span class=\"hljs-comment\">// goes through every method on this object and replaces with a stub function</span><br>student.dropClass(<span class=\"hljs-number\">1</span>, stub.dropClass);<br>           <span class=\"hljs-comment\">// student.dropClass(1, stub); // since stub has all the methods, this is valid too.</span><br>stub.dropClass.called.should.be.true; <span class=\"hljs-comment\">// stubs don't call the inner implementation of the stubbed method'</span>",
      "isRoot": false,
      "uuid": "782fc43e-adf6-48c8-be7a-269e534ef2ef",
      "parentUUID": "9ab5a7bb-5718-4b65-80e8-a5c4f9b69443",
      "skipped": false
    },
    {
      "title": "should return true when the class is not full",
      "fullTitle": "student with stubs should return true when the class is not full",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule);<br>stub.classIsFull.returns(<span class=\"hljs-literal\">false</span>);<br><span class=\"hljs-keyword\">let</span> returnVal = student.addClass(stub)<br>returnVal.should.be.true;",
      "isRoot": false,
      "uuid": "b6ded3be-7973-4081-b657-13104789806e",
      "parentUUID": "9ab5a7bb-5718-4b65-80e8-a5c4f9b69443",
      "skipped": false
    },
    {
      "title": "mocks schedule",
      "fullTitle": "student with mocks mocks schedule",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> mockObj = sinon.mock(schedule);<br>            <span class=\"hljs-comment\">//  let expectation = mockObj.expects('classIsFull').twice();</span><br><span class=\"hljs-keyword\">let</span> expectation = mockObj.expects(<span class=\"hljs-string\">'classIsFull'</span>).once();             <br>student.addClass(schedule);<br>expectation.verify();",
      "isRoot": false,
      "uuid": "077f1768-00f3-4c56-9978-53fe0dd8b6ff",
      "parentUUID": "f9953de8-813b-4682-a0e0-67c5d2358039",
      "skipped": false
    },
    {
      "title": "should return true when number is even",
      "fullTitle": "isEven should return true when number is even",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "isEven(4).should.be.true;",
      "isRoot": false,
      "uuid": "6ea69e29-2e40-4a77-ac87-89d48d1279a3",
      "parentUUID": "f85bb41b-198a-48f4-a120-7f1e5c750c71",
      "skipped": false
    },
    {
      "title": "should return false when number is odd",
      "fullTitle": "isEven should return false when number is odd",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(isEven(5)).to.be.false;",
      "isRoot": false,
      "uuid": "ffd9680b-a6a1-434f-a990-bd6b384cd19f",
      "parentUUID": "f85bb41b-198a-48f4-a120-7f1e5c750c71",
      "skipped": false
    },
    {
      "title": "should be 12 when adding 7 to 5",
      "fullTitle": "add with setup/teardown should be 12 when adding 7 to 5",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "add(num, 7).should.equal(12);",
      "isRoot": false,
      "uuid": "ffd22641-c557-4de5-946b-1cb010b12ac0",
      "parentUUID": "a9a2a469-aefd-41d6-8188-865495f909b1",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}
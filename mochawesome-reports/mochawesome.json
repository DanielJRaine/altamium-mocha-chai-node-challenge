{
  "reportTitle": "altamium-mocha-chai-node-challenge",
  "stats": {
    "suites": 9,
    "tests": 11,
    "passes": 10,
    "pending": 1,
    "failures": 0,
    "start": "2016-12-01T16:38:05.018Z",
    "end": "2016-12-01T16:38:05.172Z",
    "duration": 154,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 9.1,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "api",
        "suites": [
          {
            "title": "GET /users/:username/repos",
            "suites": [],
            "tests": [
              {
                "title": "Lists all public repositories for the specified user.",
                "fullTitle": "api GET /users/:username/repos Lists all public repositories for the specified user.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7cf03c5c-f622-4f87-a495-fc8dfa7bfb99",
                "parentUUID": "c2739d14-e6d8-401f-970d-b1c4dfbd4018",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/octocat-profile-test.js",
            "uuid": "c2739d14-e6d8-401f-970d-b1c4dfbd4018",
            "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/octocat-profile-test.js",
            "passes": [
              {
                "title": "Lists all public repositories for the specified user.",
                "fullTitle": "api GET /users/:username/repos Lists all public repositories for the specified user.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7cf03c5c-f622-4f87-a495-fc8dfa7bfb99",
                "parentUUID": "c2739d14-e6d8-401f-970d-b1c4dfbd4018",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/octocat-profile-test.js",
        "uuid": "885ee6f5-0388-4768-a53d-639f4618ca06",
        "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/octocat-profile-test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "sinon tests",
        "suites": [
          {
            "title": "student.dropClass",
            "suites": [],
            "tests": [
              {
                "title": "should call the callback",
                "fullTitle": "sinon tests student.dropClass should call the callback",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> spy = sinon.spy();<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
                "isRoot": false,
                "uuid": "a9515ea8-d895-45e4-a17c-67114a0290de",
                "parentUUID": "aafe38a4-21b1-4b66-86df-f21a4d9fe2ea",
                "skipped": false
              },
              {
                "title": "should call the callback and log to the console",
                "fullTitle": "sinon tests student.dropClass should call the callback and log to the console",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">onClassDropped</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"onClassDropped was called\"</span>);<br>}<br><span class=\"hljs-keyword\">let</span> spy = sinon.spy(onClassDropped);<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
                "isRoot": false,
                "uuid": "ae0e1d45-1b3d-43e4-bf88-81e52d9377e7",
                "parentUUID": "aafe38a4-21b1-4b66-86df-f21a4d9fe2ea",
                "skipped": false
              },
              {
                "title": "should call the callback even if it is a method of an object",
                "fullTitle": "sinon tests student.dropClass should call the callback even if it is a method of an object",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sinon.spy(schedule, <span class=\"hljs-string\">'dropClass'</span>);<br>student.dropClass(<span class=\"hljs-number\">1</span>, schedule);<br>schedule.dropClass.called.should.be.true;",
                "isRoot": false,
                "uuid": "441ba890-2b95-47ac-95e1-005a84c4c4b7",
                "parentUUID": "aafe38a4-21b1-4b66-86df-f21a4d9fe2ea",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/sinon-test.js",
            "uuid": "aafe38a4-21b1-4b66-86df-f21a4d9fe2ea",
            "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/sinon-test.js",
            "passes": [
              {
                "title": "should call the callback",
                "fullTitle": "sinon tests student.dropClass should call the callback",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> spy = sinon.spy();<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
                "isRoot": false,
                "uuid": "a9515ea8-d895-45e4-a17c-67114a0290de",
                "parentUUID": "aafe38a4-21b1-4b66-86df-f21a4d9fe2ea",
                "skipped": false
              },
              {
                "title": "should call the callback and log to the console",
                "fullTitle": "sinon tests student.dropClass should call the callback and log to the console",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">onClassDropped</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"onClassDropped was called\"</span>);<br>}<br><span class=\"hljs-keyword\">let</span> spy = sinon.spy(onClassDropped);<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
                "isRoot": false,
                "uuid": "ae0e1d45-1b3d-43e4-bf88-81e52d9377e7",
                "parentUUID": "aafe38a4-21b1-4b66-86df-f21a4d9fe2ea",
                "skipped": false
              },
              {
                "title": "should call the callback even if it is a method of an object",
                "fullTitle": "sinon tests student.dropClass should call the callback even if it is a method of an object",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "sinon.spy(schedule, <span class=\"hljs-string\">'dropClass'</span>);<br>student.dropClass(<span class=\"hljs-number\">1</span>, schedule);<br>schedule.dropClass.called.should.be.true;",
                "isRoot": false,
                "uuid": "441ba890-2b95-47ac-95e1-005a84c4c4b7",
                "parentUUID": "aafe38a4-21b1-4b66-86df-f21a4d9fe2ea",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 19
          },
          {
            "title": "student with stubs",
            "suites": [],
            "tests": [
              {
                "title": "should call a stubbed method",
                "fullTitle": "sinon tests student with stubs should call a stubbed method",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule); <span class=\"hljs-comment\">// goes through every method on this object and replaces with a stub function</span><br>student.dropClass(<span class=\"hljs-number\">1</span>, stub.dropClass);<br>           <span class=\"hljs-comment\">// student.dropClass(1, stub); // since stub has all the methods, this is valid too.</span><br>stub.dropClass.called.should.be.true; <span class=\"hljs-comment\">// stubs don't call the inner implementation of the stubbed method'</span>",
                "isRoot": false,
                "uuid": "8d3d0e2e-b72f-47cf-9113-2f4a32734d2d",
                "parentUUID": "a2d3857a-be12-4d3f-9451-e54904d09588",
                "skipped": false
              },
              {
                "title": "should return true when the class is not full",
                "fullTitle": "sinon tests student with stubs should return true when the class is not full",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule);<br>stub.classIsFull.returns(<span class=\"hljs-literal\">false</span>);<br><span class=\"hljs-keyword\">let</span> returnVal = student.addClass(stub)<br>returnVal.should.be.true;",
                "isRoot": false,
                "uuid": "3646463b-1f74-4ba5-b5aa-f1fc352fda5d",
                "parentUUID": "a2d3857a-be12-4d3f-9451-e54904d09588",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/sinon-test.js",
            "uuid": "a2d3857a-be12-4d3f-9451-e54904d09588",
            "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/sinon-test.js",
            "passes": [
              {
                "title": "should call a stubbed method",
                "fullTitle": "sinon tests student with stubs should call a stubbed method",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule); <span class=\"hljs-comment\">// goes through every method on this object and replaces with a stub function</span><br>student.dropClass(<span class=\"hljs-number\">1</span>, stub.dropClass);<br>           <span class=\"hljs-comment\">// student.dropClass(1, stub); // since stub has all the methods, this is valid too.</span><br>stub.dropClass.called.should.be.true; <span class=\"hljs-comment\">// stubs don't call the inner implementation of the stubbed method'</span>",
                "isRoot": false,
                "uuid": "8d3d0e2e-b72f-47cf-9113-2f4a32734d2d",
                "parentUUID": "a2d3857a-be12-4d3f-9451-e54904d09588",
                "skipped": false
              },
              {
                "title": "should return true when the class is not full",
                "fullTitle": "sinon tests student with stubs should return true when the class is not full",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule);<br>stub.classIsFull.returns(<span class=\"hljs-literal\">false</span>);<br><span class=\"hljs-keyword\">let</span> returnVal = student.addClass(stub)<br>returnVal.should.be.true;",
                "isRoot": false,
                "uuid": "3646463b-1f74-4ba5-b5aa-f1fc352fda5d",
                "parentUUID": "a2d3857a-be12-4d3f-9451-e54904d09588",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6
          },
          {
            "title": "student with mocks",
            "suites": [],
            "tests": [
              {
                "title": "mocks schedule",
                "fullTitle": "sinon tests student with mocks mocks schedule",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> mockObj = sinon.mock(schedule);<br>            <span class=\"hljs-comment\">//  let expectation = mockObj.expects('classIsFull').twice();</span><br><span class=\"hljs-keyword\">let</span> expectation = mockObj.expects(<span class=\"hljs-string\">'classIsFull'</span>).once();             <br>student.addClass(schedule);<br>expectation.verify();",
                "isRoot": false,
                "uuid": "62205346-ce86-48b9-b8b9-873a0b1bd15e",
                "parentUUID": "b25d7fbf-e999-4904-8895-ef14fe084d48",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/sinon-test.js",
            "uuid": "b25d7fbf-e999-4904-8895-ef14fe084d48",
            "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/sinon-test.js",
            "passes": [
              {
                "title": "mocks schedule",
                "fullTitle": "sinon tests student with mocks mocks schedule",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">let</span> mockObj = sinon.mock(schedule);<br>            <span class=\"hljs-comment\">//  let expectation = mockObj.expects('classIsFull').twice();</span><br><span class=\"hljs-keyword\">let</span> expectation = mockObj.expects(<span class=\"hljs-string\">'classIsFull'</span>).once();             <br>student.addClass(schedule);<br>expectation.verify();",
                "isRoot": false,
                "uuid": "62205346-ce86-48b9-b8b9-873a0b1bd15e",
                "parentUUID": "b25d7fbf-e999-4904-8895-ef14fe084d48",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/sinon-test.js",
        "uuid": "78bfb66a-749f-41c5-8702-094df6d66829",
        "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/sinon-test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "number tests",
        "suites": [
          {
            "title": "isEven",
            "suites": [],
            "tests": [
              {
                "title": "should return true when number is even",
                "fullTitle": "number tests isEven should return true when number is even",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "isEven(4).should.be.true;",
                "isRoot": false,
                "uuid": "8471aee6-8ef0-46c5-abd3-8b896ef841aa",
                "parentUUID": "535d4321-4793-4648-ac04-36974508a131",
                "skipped": false
              },
              {
                "title": "should return false when number is odd",
                "fullTitle": "number tests isEven should return false when number is odd",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(isEven(5)).to.be.false;",
                "isRoot": false,
                "uuid": "aad73d9d-20d3-4f94-8495-e7dc3e96161b",
                "parentUUID": "535d4321-4793-4648-ac04-36974508a131",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/test.js",
            "uuid": "535d4321-4793-4648-ac04-36974508a131",
            "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/test.js",
            "passes": [
              {
                "title": "should return true when number is even",
                "fullTitle": "number tests isEven should return true when number is even",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "isEven(4).should.be.true;",
                "isRoot": false,
                "uuid": "8471aee6-8ef0-46c5-abd3-8b896ef841aa",
                "parentUUID": "535d4321-4793-4648-ac04-36974508a131",
                "skipped": false
              },
              {
                "title": "should return false when number is odd",
                "fullTitle": "number tests isEven should return false when number is odd",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(isEven(5)).to.be.false;",
                "isRoot": false,
                "uuid": "aad73d9d-20d3-4f94-8495-e7dc3e96161b",
                "parentUUID": "535d4321-4793-4648-ac04-36974508a131",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "add with setup/teardown",
            "suites": [],
            "tests": [
              {
                "title": "should be 12 when adding 7 to 5",
                "fullTitle": "number tests add with setup/teardown should be 12 when adding 7 to 5",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "add(num, 7).should.equal(12);",
                "isRoot": false,
                "uuid": "74388f85-f915-40de-8856-6ed4826864aa",
                "parentUUID": "4ee46bb6-1019-43cf-aa82-f597def38323",
                "skipped": false
              },
              {
                "title": "should be 12 when adding 7 to 5",
                "fullTitle": "number tests add with setup/teardown should be 12 when adding 7 to 5",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "d1c1d99a-e1cb-48eb-9e3f-f8da9d8165e9",
                "parentUUID": "4ee46bb6-1019-43cf-aa82-f597def38323",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "should be 12 when adding 7 to 5",
                "fullTitle": "number tests add with setup/teardown should be 12 when adding 7 to 5",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "d1c1d99a-e1cb-48eb-9e3f-f8da9d8165e9",
                "parentUUID": "4ee46bb6-1019-43cf-aa82-f597def38323",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 2000,
            "file": "/test/test.js",
            "uuid": "4ee46bb6-1019-43cf-aa82-f597def38323",
            "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/test.js",
            "passes": [
              {
                "title": "should be 12 when adding 7 to 5",
                "fullTitle": "number tests add with setup/teardown should be 12 when adding 7 to 5",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "add(num, 7).should.equal(12);",
                "isRoot": false,
                "uuid": "74388f85-f915-40de-8856-6ed4826864aa",
                "parentUUID": "4ee46bb6-1019-43cf-aa82-f597def38323",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/test.js",
        "uuid": "a1189ebb-ee3b-42cc-a9a9-73878ab4044f",
        "fullFile": "/home/chrx/web-development/altamium-mocha-chai-node-challenge/test/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "4bc15aa3-907c-4965-a180-5d5a15dc450d",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "Lists all public repositories for the specified user.",
      "fullTitle": "GET /users/:username/repos Lists all public repositories for the specified user.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "",
      "isRoot": false,
      "uuid": "7aa115fd-56f0-4eaf-8131-237da0c07c65",
      "parentUUID": "c2739d14-e6d8-401f-970d-b1c4dfbd4018",
      "skipped": false
    },
    {
      "title": "should call the callback",
      "fullTitle": "student.dropClass should call the callback",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> spy = sinon.spy();<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
      "isRoot": false,
      "uuid": "6973a226-584b-4946-aebe-c57203f724eb",
      "parentUUID": "aafe38a4-21b1-4b66-86df-f21a4d9fe2ea",
      "skipped": false
    },
    {
      "title": "should call the callback and log to the console",
      "fullTitle": "student.dropClass should call the callback and log to the console",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">onClassDropped</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"onClassDropped was called\"</span>);<br>}<br><span class=\"hljs-keyword\">let</span> spy = sinon.spy(onClassDropped);<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
      "isRoot": false,
      "uuid": "7fc8c983-5dd7-4239-9f11-269ceff9845f",
      "parentUUID": "aafe38a4-21b1-4b66-86df-f21a4d9fe2ea",
      "skipped": false
    },
    {
      "title": "should call the callback even if it is a method of an object",
      "fullTitle": "student.dropClass should call the callback even if it is a method of an object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "sinon.spy(schedule, <span class=\"hljs-string\">'dropClass'</span>);<br>student.dropClass(<span class=\"hljs-number\">1</span>, schedule);<br>schedule.dropClass.called.should.be.true;",
      "isRoot": false,
      "uuid": "15b87868-e2dd-4e81-bbb7-82a253296bdd",
      "parentUUID": "aafe38a4-21b1-4b66-86df-f21a4d9fe2ea",
      "skipped": false
    },
    {
      "title": "should call a stubbed method",
      "fullTitle": "student with stubs should call a stubbed method",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule); <span class=\"hljs-comment\">// goes through every method on this object and replaces with a stub function</span><br>student.dropClass(<span class=\"hljs-number\">1</span>, stub.dropClass);<br>           <span class=\"hljs-comment\">// student.dropClass(1, stub); // since stub has all the methods, this is valid too.</span><br>stub.dropClass.called.should.be.true; <span class=\"hljs-comment\">// stubs don't call the inner implementation of the stubbed method'</span>",
      "isRoot": false,
      "uuid": "6a263ee0-4e57-4623-804b-98051288c1ed",
      "parentUUID": "a2d3857a-be12-4d3f-9451-e54904d09588",
      "skipped": false
    },
    {
      "title": "should return true when the class is not full",
      "fullTitle": "student with stubs should return true when the class is not full",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule);<br>stub.classIsFull.returns(<span class=\"hljs-literal\">false</span>);<br><span class=\"hljs-keyword\">let</span> returnVal = student.addClass(stub)<br>returnVal.should.be.true;",
      "isRoot": false,
      "uuid": "2c8c1a9d-880b-4844-9653-2d7fcd34694c",
      "parentUUID": "a2d3857a-be12-4d3f-9451-e54904d09588",
      "skipped": false
    },
    {
      "title": "mocks schedule",
      "fullTitle": "student with mocks mocks schedule",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> mockObj = sinon.mock(schedule);<br>            <span class=\"hljs-comment\">//  let expectation = mockObj.expects('classIsFull').twice();</span><br><span class=\"hljs-keyword\">let</span> expectation = mockObj.expects(<span class=\"hljs-string\">'classIsFull'</span>).once();             <br>student.addClass(schedule);<br>expectation.verify();",
      "isRoot": false,
      "uuid": "0173df0a-d0a6-4e3a-a79a-1ac3126301a2",
      "parentUUID": "b25d7fbf-e999-4904-8895-ef14fe084d48",
      "skipped": false
    },
    {
      "title": "should return true when number is even",
      "fullTitle": "isEven should return true when number is even",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "isEven(4).should.be.true;",
      "isRoot": false,
      "uuid": "aa60ec1a-6196-4f3b-bf5e-5e8ad5e46151",
      "parentUUID": "535d4321-4793-4648-ac04-36974508a131",
      "skipped": false
    },
    {
      "title": "should return false when number is odd",
      "fullTitle": "isEven should return false when number is odd",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(isEven(5)).to.be.false;",
      "isRoot": false,
      "uuid": "c258a0d1-06bf-4f62-932e-146b86abc5e8",
      "parentUUID": "535d4321-4793-4648-ac04-36974508a131",
      "skipped": false
    },
    {
      "title": "should be 12 when adding 7 to 5",
      "fullTitle": "add with setup/teardown should be 12 when adding 7 to 5",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "add(num, 7).should.equal(12);",
      "isRoot": false,
      "uuid": "0693017b-4c71-42e1-90b1-dd9569f3914b",
      "parentUUID": "4ee46bb6-1019-43cf-aa82-f597def38323",
      "skipped": false
    },
    {
      "title": "should be 12 when adding 7 to 5",
      "fullTitle": "add with setup/teardown should be 12 when adding 7 to 5",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "3a7ea7d0-f7de-400f-9870-546111179e21",
      "parentUUID": "4ee46bb6-1019-43cf-aa82-f597def38323",
      "skipped": false
    }
  ],
  "allPending": [
    {
      "title": "should be 12 when adding 7 to 5",
      "fullTitle": "add with setup/teardown should be 12 when adding 7 to 5",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "7092d550-31a5-498a-a393-3d54e5bb016b",
      "parentUUID": "4ee46bb6-1019-43cf-aa82-f597def38323",
      "skipped": false
    }
  ],
  "allPasses": [
    {
      "title": "Lists all public repositories for the specified user.",
      "fullTitle": "GET /users/:username/repos Lists all public repositories for the specified user.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "",
      "isRoot": false,
      "uuid": "118819a0-4686-46ac-a4fc-84186fdc41a4",
      "parentUUID": "c2739d14-e6d8-401f-970d-b1c4dfbd4018",
      "skipped": false
    },
    {
      "title": "should call the callback",
      "fullTitle": "student.dropClass should call the callback",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> spy = sinon.spy();<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
      "isRoot": false,
      "uuid": "7a3487f3-5651-478c-a57a-c8f8188a102a",
      "parentUUID": "aafe38a4-21b1-4b66-86df-f21a4d9fe2ea",
      "skipped": false
    },
    {
      "title": "should call the callback and log to the console",
      "fullTitle": "student.dropClass should call the callback and log to the console",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">onClassDropped</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"onClassDropped was called\"</span>);<br>}<br><span class=\"hljs-keyword\">let</span> spy = sinon.spy(onClassDropped);<br>student.dropClass(<span class=\"hljs-number\">1</span>, spy);<br>spy.called.should.be.true;",
      "isRoot": false,
      "uuid": "91d91335-f65f-468d-b404-ed8e67558513",
      "parentUUID": "aafe38a4-21b1-4b66-86df-f21a4d9fe2ea",
      "skipped": false
    },
    {
      "title": "should call the callback even if it is a method of an object",
      "fullTitle": "student.dropClass should call the callback even if it is a method of an object",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "sinon.spy(schedule, <span class=\"hljs-string\">'dropClass'</span>);<br>student.dropClass(<span class=\"hljs-number\">1</span>, schedule);<br>schedule.dropClass.called.should.be.true;",
      "isRoot": false,
      "uuid": "0abdfa77-d65e-4bc8-86a2-08b6913fd72e",
      "parentUUID": "aafe38a4-21b1-4b66-86df-f21a4d9fe2ea",
      "skipped": false
    },
    {
      "title": "should call a stubbed method",
      "fullTitle": "student with stubs should call a stubbed method",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule); <span class=\"hljs-comment\">// goes through every method on this object and replaces with a stub function</span><br>student.dropClass(<span class=\"hljs-number\">1</span>, stub.dropClass);<br>           <span class=\"hljs-comment\">// student.dropClass(1, stub); // since stub has all the methods, this is valid too.</span><br>stub.dropClass.called.should.be.true; <span class=\"hljs-comment\">// stubs don't call the inner implementation of the stubbed method'</span>",
      "isRoot": false,
      "uuid": "8c210d6e-9b55-4e20-a926-91562d3295da",
      "parentUUID": "a2d3857a-be12-4d3f-9451-e54904d09588",
      "skipped": false
    },
    {
      "title": "should return true when the class is not full",
      "fullTitle": "student with stubs should return true when the class is not full",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> stub = sinon.stub(schedule);<br>stub.classIsFull.returns(<span class=\"hljs-literal\">false</span>);<br><span class=\"hljs-keyword\">let</span> returnVal = student.addClass(stub)<br>returnVal.should.be.true;",
      "isRoot": false,
      "uuid": "07727cd5-4ddd-49bd-813b-3d5f5d17e860",
      "parentUUID": "a2d3857a-be12-4d3f-9451-e54904d09588",
      "skipped": false
    },
    {
      "title": "mocks schedule",
      "fullTitle": "student with mocks mocks schedule",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">let</span> mockObj = sinon.mock(schedule);<br>            <span class=\"hljs-comment\">//  let expectation = mockObj.expects('classIsFull').twice();</span><br><span class=\"hljs-keyword\">let</span> expectation = mockObj.expects(<span class=\"hljs-string\">'classIsFull'</span>).once();             <br>student.addClass(schedule);<br>expectation.verify();",
      "isRoot": false,
      "uuid": "c893e0cb-1bf9-4121-ba5a-dc8aa38bb34c",
      "parentUUID": "b25d7fbf-e999-4904-8895-ef14fe084d48",
      "skipped": false
    },
    {
      "title": "should return true when number is even",
      "fullTitle": "isEven should return true when number is even",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "isEven(4).should.be.true;",
      "isRoot": false,
      "uuid": "5793c31c-275f-4e53-a6c4-596f94ae6f83",
      "parentUUID": "535d4321-4793-4648-ac04-36974508a131",
      "skipped": false
    },
    {
      "title": "should return false when number is odd",
      "fullTitle": "isEven should return false when number is odd",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(isEven(5)).to.be.false;",
      "isRoot": false,
      "uuid": "76e8fc2a-b787-43d2-98b4-d5f182c0f00a",
      "parentUUID": "535d4321-4793-4648-ac04-36974508a131",
      "skipped": false
    },
    {
      "title": "should be 12 when adding 7 to 5",
      "fullTitle": "add with setup/teardown should be 12 when adding 7 to 5",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "add(num, 7).should.equal(12);",
      "isRoot": false,
      "uuid": "fbba93f7-496c-42aa-8ea7-405033340356",
      "parentUUID": "4ee46bb6-1019-43cf-aa82-f597def38323",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}